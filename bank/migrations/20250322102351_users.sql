create table users (
  id                    uuid         primary key,
  first_name            varchar(255) not null,
  last_name             varchar(255) not null,
  email                 varchar(255) not null unique,
  email_verified_at     timestamptz  default null,
  created_at            timestamptz  not null default now(),
  updated_at            timestamptz  not null default now()
);

-- we use passkeys, a passwordless authentication mechanism
-- based on a private / public key pair generated by the client,
-- where only the public key is stored on the server and used
-- for verifying authenticity of future requests. see
-- https://webauthn.io for more information.
--
-- for convenience, a user can have multiple passkeys (for multiple
-- devices, authenticators, etc), and can freely manage them.
create table passkeys (
  id                    uuid         primary key default gen_random_uuid(),

  -- a mere display name to be shown to the user during passkey management.
  key_name              varchar(255) not null,
  user_id               uuid         not null references users(id) on delete cascade,

  -- the credential ID is generated by the authenticator, and is used
  -- to identify the passkey between the server and the authenticator.
  -- it is included in passkey_data, but replicated separately for ease
  -- of access.
  credential_id         bytea        not null unique,

  -- the data of the passkey, including the credential id, the public key, etc.
  -- the public key is not stored separately, as it shouldn't be opened for
  -- inspection / verification except through the standard webauthn library.
  passkey_data          jsonb        not null,

  created_at            timestamptz  not null default now(),
  updated_at            timestamptz  not null default now()
);
